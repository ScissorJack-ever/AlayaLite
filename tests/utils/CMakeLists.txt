add_executable(query_utils_test ${CMAKE_CURRENT_SOURCE_DIR}/query_utils_test.cpp)
add_executable(log_test ${CMAKE_CURRENT_SOURCE_DIR}/log_test.cpp)
add_executable(evaluate_test ${CMAKE_CURRENT_SOURCE_DIR}/evaluate_test.cpp)
add_executable(metric_type_test ${CMAKE_CURRENT_SOURCE_DIR}/metric_type_test.cpp)
add_executable(data_utils_test ${CMAKE_CURRENT_SOURCE_DIR}/data_utils_test.cpp)
add_executable(dataset_utils_test ${CMAKE_CURRENT_SOURCE_DIR}/dataset_utils_test.cpp)
add_executable(roundup_utils_test ${CMAKE_CURRENT_SOURCE_DIR}/rabitq_utils/roundup_test.cpp)
add_executable(fht_avx_utils_test ${CMAKE_CURRENT_SOURCE_DIR}/rabitq_utils/fht_avx.cpp)

target_link_libraries(query_utils_test PRIVATE ${THIRD_PARTY_LIBS} ${GTEST_LIBS})
target_link_libraries(log_test PRIVATE ${THIRD_PARTY_LIBS} ${GTEST_LIBS})
target_link_libraries(evaluate_test PRIVATE ${THIRD_PARTY_LIBS} ${GTEST_LIBS})
target_link_libraries(metric_type_test PRIVATE ${THIRD_PARTY_LIBS} ${GTEST_LIBS})
target_link_libraries(data_utils_test PRIVATE ${THIRD_PARTY_LIBS} ${GTEST_LIBS})
target_link_libraries(dataset_utils_test PRIVATE ${THIRD_PARTY_LIBS} ${GTEST_LIBS})
target_link_libraries(roundup_utils_test PRIVATE ${THIRD_PARTY_LIBS} ${GTEST_LIBS})
target_link_libraries(fht_avx_utils_test PRIVATE ${THIRD_PARTY_LIBS} ${GTEST_LIBS})

add_test(NAME utils_test_query_utils COMMAND $<TARGET_FILE:query_utils_test>)
add_test(NAME utils_test_log COMMAND $<TARGET_FILE:log_test>)
add_test(NAME utils_test_evaluate COMMAND $<TARGET_FILE:evaluate_test>)
add_test(NAME utils_test_metric_type COMMAND $<TARGET_FILE:metric_type_test>)
add_test(NAME utils_test_data_utils COMMAND $<TARGET_FILE:data_utils_test>)
add_test(NAME utils_test_dataset_utils COMMAND $<TARGET_FILE:dataset_utils_test>)
add_test(NAME utils_test_roundup_utils COMMAND $<TARGET_FILE:roundup_utils_test>)
add_test(NAME utils_test_fht_avx_utils COMMAND $<TARGET_FILE:fht_avx_utils_test>)

if(NOT DEFINED ENV{CI})
  add_executable(rotator_utils_test ${CMAKE_CURRENT_SOURCE_DIR}/rabitq_utils/rotator_test.cpp)
  target_link_libraries(rotator_utils_test PRIVATE ${THIRD_PARTY_LIBS} ${GTEST_LIBS})
  add_test(NAME utils_test_rotator_utils COMMAND $<TARGET_FILE:rotator_utils_test>)
endif()
